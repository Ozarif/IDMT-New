@using IDMT.Infrastructure.Identity
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager



<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var userName = UserManager.GetUserName(User);
        var applicationUser = await UserManager.FindByNameAsync(userName);
        var role = (await UserManager.GetRolesAsync(applicationUser)).SingleOrDefault();

        <ul class="navbar-nav ms-auto mb-2 mb-lg-0 profile-menu">
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="bi bi-person-circle h4"></i>
                    &nbsp; <span>@applicationUser.FullName</span>
                </a>
                <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="navbarDropdown">
                    <li><span class="dropdown-item"><i class="bi bi-person-square"></i>&nbsp;&nbsp; @applicationUser.FullName</span></li>
                    <li><span class="dropdown-item"><i class="bi bi-person-workspace"></i>&nbsp;&nbsp; @role</span></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item" asp-controller="Accounts" asp-action="ChangePassword"><i class="bi bi-shield-slash-fill"></i>&nbsp;&nbsp; Change Password</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item" asp-controller="Accounts" asp-action="Logout"><i class="bi bi-box-arrow-left"></i>&nbsp;&nbsp; Log Out</a></li>
                </ul>
            </li>
        </ul>

    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-controller="Accounts" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-controller="Accounts" asp-action="Login">Login</a>
        </li>
    }
</ul>